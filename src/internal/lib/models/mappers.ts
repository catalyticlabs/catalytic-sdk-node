/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const ProblemDetails: msRest.CompositeMapper = {
  serializedName: "ProblemDetails",
  type: {
    name: "Composite",
    className: "ProblemDetails",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      status: {
        nullable: true,
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      detail: {
        serializedName: "detail",
        type: {
          name: "String"
        }
      },
      instance: {
        serializedName: "instance",
        type: {
          name: "String"
        }
      },
      extensions: {
        readOnly: true,
        serializedName: "extensions",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const ActionInputDefinition: msRest.CompositeMapper = {
  serializedName: "ActionInputDefinition",
  type: {
    name: "Composite",
    className: "ActionInputDefinition",
    modelProperties: {
      isRequired: {
        serializedName: "isRequired",
        type: {
          name: "Boolean"
        }
      },
      defaultValueSerialized: {
        serializedName: "defaultValueSerialized",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ActionOutputDefinition: msRest.CompositeMapper = {
  serializedName: "ActionOutputDefinition",
  type: {
    name: "Composite",
    className: "ActionOutputDefinition",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Action: msRest.CompositeMapper = {
  serializedName: "Action",
  type: {
    name: "Composite",
    className: "Action",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      teamName: {
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredWorkerTags: {
        readOnly: true,
        serializedName: "requiredWorkerTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inputs: {
        readOnly: true,
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionInputDefinition"
            }
          }
        }
      },
      outputs: {
        readOnly: true,
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionOutputDefinition"
            }
          }
        }
      },
      isPublished: {
        serializedName: "isPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ActionsPage: msRest.CompositeMapper = {
  serializedName: "ActionsPage",
  type: {
    name: "Composite",
    className: "ActionsPage",
    modelProperties: {
      actions: {
        readOnly: true,
        serializedName: "actions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Action"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const RegisterActionRequest: msRest.CompositeMapper = {
  serializedName: "RegisterActionRequest",
  type: {
    name: "Composite",
    className: "RegisterActionRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredWorkerTags: {
        readOnly: true,
        serializedName: "requiredWorkerTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      inputs: {
        readOnly: true,
        serializedName: "inputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionInputDefinition"
            }
          }
        }
      },
      outputs: {
        readOnly: true,
        serializedName: "outputs",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionOutputDefinition"
            }
          }
        }
      },
      isPublished: {
        serializedName: "isPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const UpdateActionRequest: msRest.CompositeMapper = {
  serializedName: "UpdateActionRequest",
  type: {
    name: "Composite",
    className: "UpdateActionRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      requiredWorkerTags: {
        serializedName: "requiredWorkerTags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      isPublished: {
        nullable: true,
        serializedName: "isPublished",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const ActionWorker: msRest.CompositeMapper = {
  serializedName: "ActionWorker",
  type: {
    name: "Composite",
    className: "ActionWorker",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      teamName: {
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      implementedActionIds: {
        readOnly: true,
        serializedName: "implementedActionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      lastSeenTime: {
        serializedName: "lastSeenTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const ActionWorkersPage: msRest.CompositeMapper = {
  serializedName: "ActionWorkersPage",
  type: {
    name: "Composite",
    className: "ActionWorkersPage",
    modelProperties: {
      actionWorkers: {
        readOnly: true,
        serializedName: "actionWorkers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ActionWorker"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CreateActionWorkerRequest: msRest.CompositeMapper = {
  serializedName: "CreateActionWorkerRequest",
  type: {
    name: "Composite",
    className: "CreateActionWorkerRequest",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      implementedActionIds: {
        serializedName: "implementedActionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      }
    }
  }
};

export const ActionWorkerWithCredentials: msRest.CompositeMapper = {
  serializedName: "ActionWorkerWithCredentials",
  type: {
    name: "Composite",
    className: "ActionWorkerWithCredentials",
    modelProperties: {
      secretKey: {
        serializedName: "secretKey",
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      teamName: {
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        readOnly: true,
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      implementedActionIds: {
        readOnly: true,
        serializedName: "implementedActionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      lastSeenTime: {
        serializedName: "lastSeenTime",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const UpdateActionWorkerRequest: msRest.CompositeMapper = {
  serializedName: "UpdateActionWorkerRequest",
  type: {
    name: "Composite",
    className: "UpdateActionWorkerRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      hostname: {
        serializedName: "hostname",
        type: {
          name: "String"
        }
      },
      ipAddress: {
        serializedName: "ipAddress",
        type: {
          name: "String"
        }
      },
      implementedActionIds: {
        serializedName: "implementedActionIds",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      }
    }
  }
};

export const CreateDeveloperKeyRequest: msRest.CompositeMapper = {
  serializedName: "CreateDeveloperKeyRequest",
  type: {
    name: "Composite",
    className: "CreateDeveloperKeyRequest",
    modelProperties: {
      domain: {
        required: true,
        serializedName: "domain",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeveloperKey: msRest.CompositeMapper = {
  serializedName: "DeveloperKey",
  type: {
    name: "Composite",
    className: "DeveloperKey",
    modelProperties: {
      accessIdentifier: {
        required: true,
        serializedName: "accessIdentifier",
        type: {
          name: "Uuid"
        }
      },
      secret: {
        serializedName: "secret",
        type: {
          name: "String"
        }
      },
      status: {
        required: true,
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      createdById: {
        serializedName: "createdById",
        type: {
          name: "Uuid"
        }
      },
      domain: {
        required: true,
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      referenceName: {
        readOnly: true,
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      id: {
        readOnly: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      }
    }
  }
};

export const DeveloperKeyActivationRequest: msRest.CompositeMapper = {
  serializedName: "DeveloperKeyActivationRequest",
  type: {
    name: "Composite",
    className: "DeveloperKeyActivationRequest",
    modelProperties: {
      domain: {
        required: true,
        serializedName: "domain",
        type: {
          name: "String"
        }
      },
      accessIdentifier: {
        required: true,
        serializedName: "accessIdentifier",
        type: {
          name: "String"
        }
      },
      requestTimeoutMS: {
        nullable: true,
        serializedName: "requestTimeoutMS",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const FieldRestrictions: msRest.CompositeMapper = {
  serializedName: "FieldRestrictions",
  type: {
    name: "Composite",
    className: "FieldRestrictions",
    modelProperties: {
      choices: {
        readOnly: true,
        serializedName: "choices",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      valueRequired: {
        serializedName: "valueRequired",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DataTableColumn: msRest.CompositeMapper = {
  serializedName: "DataTableColumn",
  type: {
    name: "Composite",
    className: "DataTableColumn",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      referenceName: {
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      restrictions: {
        serializedName: "restrictions",
        type: {
          name: "Composite",
          className: "FieldRestrictions"
        }
      }
    }
  }
};

export const DataTable: msRest.CompositeMapper = {
  serializedName: "DataTable",
  type: {
    name: "Composite",
    className: "DataTable",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      dataTableId: {
        readOnly: true,
        serializedName: "dataTableId",
        type: {
          name: "Uuid"
        }
      },
      referenceName: {
        readOnly: true,
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      teamName: {
        required: true,
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      columns: {
        readOnly: true,
        serializedName: "columns",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataTableColumn"
            }
          }
        }
      },
      isArchived: {
        serializedName: "isArchived",
        type: {
          name: "Boolean"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      },
      adminUsers: {
        readOnly: true,
        serializedName: "adminUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      standardUsers: {
        readOnly: true,
        serializedName: "standardUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnlyUsers: {
        readOnly: true,
        serializedName: "readOnlyUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      rowLimit: {
        serializedName: "rowLimit",
        type: {
          name: "Number"
        }
      },
      columnLimit: {
        serializedName: "columnLimit",
        type: {
          name: "Number"
        }
      },
      cellLimit: {
        serializedName: "cellLimit",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DataTablesPage: msRest.CompositeMapper = {
  serializedName: "DataTablesPage",
  type: {
    name: "Composite",
    className: "DataTablesPage",
    modelProperties: {
      dataTables: {
        readOnly: true,
        serializedName: "dataTables",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DataTable"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const DeveloperKeysPage: msRest.CompositeMapper = {
  serializedName: "DeveloperKeysPage",
  type: {
    name: "Composite",
    className: "DeveloperKeysPage",
    modelProperties: {
      developerKeys: {
        readOnly: true,
        serializedName: "developerKeys",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeveloperKey"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const File: msRest.CompositeMapper = {
  serializedName: "File",
  type: {
    name: "Composite",
    className: "File",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      teamName: {
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      sizeInBytes: {
        serializedName: "sizeInBytes",
        type: {
          name: "Number"
        }
      },
      displaySize: {
        serializedName: "displaySize",
        type: {
          name: "String"
        }
      },
      isPublic: {
        serializedName: "isPublic",
        type: {
          name: "Boolean"
        }
      },
      md5Hash: {
        serializedName: "md5Hash",
        type: {
          name: "String"
        }
      },
      referenceName: {
        readOnly: true,
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const FilesPage: msRest.CompositeMapper = {
  serializedName: "FilesPage",
  type: {
    name: "Composite",
    className: "FilesPage",
    modelProperties: {
      files: {
        readOnly: true,
        serializedName: "files",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "File"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InstanceStep: msRest.CompositeMapper = {
  serializedName: "InstanceStep",
  type: {
    name: "Composite",
    className: "InstanceStep",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      instanceId: {
        required: true,
        serializedName: "instanceId",
        type: {
          name: "Uuid"
        }
      },
      pushbotId: {
        required: true,
        serializedName: "pushbotId",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      referenceName: {
        required: true,
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      teamName: {
        required: true,
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      position: {
        serializedName: "position",
        type: {
          name: "Number"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      assignedTo: {
        serializedName: "assignedTo",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Field: msRest.CompositeMapper = {
  serializedName: "Field",
  type: {
    name: "Composite",
    className: "Field",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      referenceName: {
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      position: {
        serializedName: "position",
        type: {
          name: "Number"
        }
      },
      restrictions: {
        serializedName: "restrictions",
        type: {
          name: "Composite",
          className: "FieldRestrictions"
        }
      },
      fieldType: {
        serializedName: "fieldType",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      defaultValue: {
        serializedName: "defaultValue",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Instance: msRest.CompositeMapper = {
  serializedName: "Instance",
  type: {
    name: "Composite",
    className: "Instance",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      pushbotId: {
        required: true,
        serializedName: "pushbotId",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      teamName: {
        required: true,
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      steps: {
        readOnly: true,
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceStep"
            }
          }
        }
      },
      fields: {
        readOnly: true,
        serializedName: "fields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Field"
            }
          }
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "String"
        }
      },
      fieldVisibility: {
        serializedName: "fieldVisibility",
        type: {
          name: "String"
        }
      },
      visibility: {
        serializedName: "visibility",
        type: {
          name: "String"
        }
      },
      adminUsers: {
        readOnly: true,
        serializedName: "adminUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      standardUsers: {
        readOnly: true,
        serializedName: "standardUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const InstancesPage: msRest.CompositeMapper = {
  serializedName: "InstancesPage",
  type: {
    name: "Composite",
    className: "InstancesPage",
    modelProperties: {
      instances: {
        readOnly: true,
        serializedName: "instances",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Instance"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const InstanceInputField: msRest.CompositeMapper = {
  serializedName: "InstanceInputField",
  type: {
    name: "Composite",
    className: "InstanceInputField",
    modelProperties: {
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      referenceName: {
        serializedName: "referenceName",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StartInstanceRequest: msRest.CompositeMapper = {
  serializedName: "StartInstanceRequest",
  type: {
    name: "Composite",
    className: "StartInstanceRequest",
    modelProperties: {
      pushbotId: {
        serializedName: "pushbotId",
        type: {
          name: "Uuid"
        }
      },
      name: {
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      inputFields: {
        readOnly: true,
        serializedName: "inputFields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceInputField"
            }
          }
        }
      }
    }
  }
};

export const InstanceStepsPage: msRest.CompositeMapper = {
  serializedName: "InstanceStepsPage",
  type: {
    name: "Composite",
    className: "InstanceStepsPage",
    modelProperties: {
      steps: {
        readOnly: true,
        serializedName: "steps",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceStep"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const CompleteStepRequest: msRest.CompositeMapper = {
  serializedName: "CompleteStepRequest",
  type: {
    name: "Composite",
    className: "CompleteStepRequest",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      stepOutputFields: {
        readOnly: true,
        serializedName: "stepOutputFields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "InstanceInputField"
            }
          }
        }
      }
    }
  }
};

export const ReassignTaskRequest: msRest.CompositeMapper = {
  serializedName: "ReassignTaskRequest",
  type: {
    name: "Composite",
    className: "ReassignTaskRequest",
    modelProperties: {
      assignTo: {
        serializedName: "assignTo",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Pushbot: msRest.CompositeMapper = {
  serializedName: "Pushbot",
  type: {
    name: "Composite",
    className: "Pushbot",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      teamName: {
        required: true,
        serializedName: "teamName",
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        type: {
          name: "String"
        }
      },
      category: {
        serializedName: "category",
        type: {
          name: "String"
        }
      },
      inputFields: {
        readOnly: true,
        serializedName: "inputFields",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Field"
            }
          }
        }
      },
      isPublished: {
        serializedName: "isPublished",
        type: {
          name: "Boolean"
        }
      },
      isArchived: {
        serializedName: "isArchived",
        type: {
          name: "Boolean"
        }
      },
      fieldVisibility: {
        serializedName: "fieldVisibility",
        type: {
          name: "String"
        }
      },
      instanceVisibility: {
        serializedName: "instanceVisibility",
        type: {
          name: "String"
        }
      },
      adminUsers: {
        readOnly: true,
        serializedName: "adminUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      standardUsers: {
        readOnly: true,
        serializedName: "standardUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      readOnlyUsers: {
        readOnly: true,
        serializedName: "readOnlyUsers",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      taskCountLimit: {
        serializedName: "taskCountLimit",
        type: {
          name: "Number"
        }
      },
      fieldCountLimit: {
        serializedName: "fieldCountLimit",
        type: {
          name: "Number"
        }
      },
      fieldSizeLimit: {
        serializedName: "fieldSizeLimit",
        type: {
          name: "Number"
        }
      },
      fieldTotalSizeLimit: {
        serializedName: "fieldTotalSizeLimit",
        type: {
          name: "Number"
        }
      },
      dataTableRowLimit: {
        serializedName: "dataTableRowLimit",
        type: {
          name: "Number"
        }
      },
      dataTableColumnLimit: {
        serializedName: "dataTableColumnLimit",
        type: {
          name: "Number"
        }
      },
      dataTableCellLimit: {
        serializedName: "dataTableCellLimit",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const PushbotsPage: msRest.CompositeMapper = {
  serializedName: "PushbotsPage",
  type: {
    name: "Composite",
    className: "PushbotsPage",
    modelProperties: {
      pushbots: {
        readOnly: true,
        serializedName: "pushbots",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Pushbot"
            }
          }
        }
      },
      nextPageToken: {
        serializedName: "nextPageToken",
        type: {
          name: "String"
        }
      },
      count: {
        readOnly: true,
        serializedName: "count",
        type: {
          name: "Number"
        }
      }
    }
  }
};
